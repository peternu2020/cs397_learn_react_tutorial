{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","database","ref","uiConfig","signInFlow","signInOptions","auth","GoogleAuthProvider","PROVIDER_ID","callbacks","signInSuccessWithAuthResult","secondDatabase","cart_sort","arr","arr2","a","b","c","_products","i","length","push","includes","indexOf","sizes","SizeSelector","state","className","Object","values","map","value","key","selected","size","onClick","setSize","RenderShoppingCart","ShoppingCart","setShoppingCart","ShoppingCart2","setShoppingCart2","user","filteredShoppingCart","Fragment","index","child","String","filter","_product","window","confirm","title","product","product_img_src","slice","quantity","_index","splice","TotalCost","variant","transaction","Math","max","O_Product","sku","prevArray","Image","Container","src","price","O_Products","products","React","useState","sizeProducts","Group","CartProductTest","style","rounded","color","floor","reduce","total_cost","SignIn","firebaseAuth","UpdateUserSavedCart","PreviousRetrieved","userId","currentUser","uid","console","log","once","then","snapshot","hasChild","SavedShoppingCart","SavedShoppingCart2","set","Welcome","setPreviousRetrieved","Header","displayName","primary","signOut","Banner","RetrieveUserCart","val","App","data","setData","_open","setOpen","_dock","setDock","setUser","useEffect","handleData","snap","on","error","alert","off","onAuthStateChanged","fixed","Segment","align","Item","alt","role","width","height","sidebar","open","docked","pullRight","onSetOpen","styles","position","background","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"sVAyBAA,IAASC,cAVc,CACrBC,OAAQ,0CACRC,WAAY,gDACZC,YAAa,uDACbC,UAAW,gCACXC,cAAe,4CACfC,kBAAmB,eACnBC,MAAO,8CAIT,IAAMC,EAAKT,IAASU,WAAWC,MAEzBC,EAAW,CACfC,WAAY,QACZC,cAAe,CACbd,IAASe,KAAKC,mBAAmBC,aAEnCC,UAAW,CACTC,4BAA6B,kBAAM,KAanCC,EAAiBpB,IAASC,cATH,CACzBC,OAAQ,0CACRC,WAAY,8CACZC,YAAa,qDACbC,UAAW,8BACXC,cAAe,0CACfC,kBAAmB,gBACnBC,MAAO,8CAEuD,aAC9CY,EAAeV,WAAWC,MAE5C,SAASU,EAAUC,EAAKC,GAOpB,IANA,IAAIC,EAAI,GACJC,EAAI,GACJC,EAAI,GACJC,EAAY,GAGPC,EAAI,EAAGA,EAAIN,EAAIO,OAAQD,IACvB,GAALA,GACCJ,EAAEM,KAAKR,EAAIM,IACRH,EAAEK,KAAK,GACPJ,EAAEI,KAAMR,EAAIM,GAAIN,EAAIM,GAAGC,OAAQ,IAC/BF,EAAUG,KAAKP,EAAKK,KAEdA,EAAI,KACa,IAAvBJ,EAAEO,SAAST,EAAIM,KACbJ,EAAEM,KAAKR,EAAIM,IACZH,EAAEK,KAAK,GACNJ,EAAEI,KAAMR,EAAIM,GAAIN,EAAIM,GAAGC,OAAQ,IAC/BF,EAAUG,KAAKP,EAAKK,KAGpBH,EAAED,EAAEQ,QAAQV,EAAIM,QAIfN,EAAIM,GAEf,MAAO,CAACJ,EAAGC,EAAGC,EAAGC,GAKrB,IAIMM,EAAQ,CAAC,KAAM,IAAK,IAAK,IAAK,MAE9BC,EAAe,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACnB,yBAAKC,UAAU,oBACbC,OAAOC,OAAOL,GACXM,KAAI,SAAAC,GAAK,OACR,4BAAQC,IAAKD,EACXJ,WAXUM,EAWcF,IAAUL,EAAMQ,KAVhDD,EAAQ,gCAAqC,UAWrCE,QAAU,kBAAMT,EAAMU,QAAQL,KAC5BA,GAbQ,IAAAE,OAoBdI,EAAqB,SAAC,GAA6E,IAA3EC,EAA0E,EAA1EA,aAAcC,EAA4D,EAA5DA,gBAAiBC,EAA2C,EAA3CA,cAAeC,EAA4B,EAA5BA,iBAAkBC,EAAU,EAAVA,KACtFC,EAAuB/B,EAAU0B,EAAcE,GACrD,OAAIF,EAAalB,QAAU,GAAKoB,EAAcpB,QAAU,EAC/C,2CAIAkB,EAAalB,QAAUoB,EAAcpB,OACpC,kBAAC,IAAMwB,SAAP,KACPD,EAAqB,GAAGb,KAAI,SAACE,EAAKa,GAC/B,GAAsE,GAAnE7C,EAAG8C,MAAMC,OAAOJ,EAAqB,GAAGE,IAAU,cACnDN,GAAgB,SAAAD,GAAY,OAAIA,EAAaU,QAAO,SAAAC,GAAQ,OAAIA,IAAaN,EAAqB,GAAGE,SACrGJ,GAAiB,SAAAD,GAAa,OAAIA,EAAcQ,QAAO,SAAAC,GAAQ,OAAIA,IAAaN,EAAqB,GAAGE,SACxGK,OAAOC,QAAQJ,OAAOJ,EAAqB,GAAGE,GAAOO,OAAS,YAAcL,OAAOJ,EAAqB,GAAGE,GAAOX,MAAQ,gEAEvH,MAAGS,EAAqB,GAAGE,GAAS7C,EAAG8C,MAAMC,OAAOJ,EAAqB,GAAGE,IAAU,eAazF,OAAO,kBAAC,EAAD,CAAiBb,IAAMA,EAAKqB,QAASV,EAAqB,GAAGE,GAAQS,gBAAmB,iBAAmBX,EAAqB,GAAGE,GAAOU,MAAM,GAAI,GAAK,SAAUC,SAAYb,EAAqB,GAAGE,GAAQP,aAAgBA,EAAcC,gBAAmBA,EAAiBC,cAAiBA,EAAeC,iBAAoBA,IAZ5U,KAAME,EAAqB,GAAGE,GAAS7C,EAAG8C,MAAMC,OAAOJ,EAAqB,GAAGE,IAAU,eAAc,CACrG,IAAIY,EAASjB,EAAcjB,QAAQoB,EAAqB,GAAGE,IAE3DP,EAAaoB,OAAOD,EAAQ,GAC5BjB,EAAckB,OAAOD,EAAQ,GAE7BlB,GAAgB,SAAAD,GAAY,mBAAQA,MACpCG,GAAiB,SAAAD,GAAa,mBAAQA,MAExCU,OAAOC,QAAQ,iCAAmCJ,OAAOJ,EAAqB,GAAGE,GAAOO,OAAS,YAAcL,OAAOJ,EAAqB,GAAGE,GAAOX,MAAQ,iGAOjK,uCACS,kBAACyB,EAAD,CAAWnB,cAAiBA,KAErC,kBAAC,IAAD,CAAQoB,QAAQ,UAAUzB,QAAS,WACtB,MAARO,GACDC,EAAqB,GAAGb,KAAI,SAACE,EAAKa,GAAN,OAAgB7C,EAAG8C,MAAMC,OAAOJ,EAAqB,GAAGE,IAAU,cAAcgB,aAAY,SAAAL,GAAQ,OAAIM,KAAKC,IAAMP,EAAWb,EAAqB,GAAGE,IAAW,SAE7LN,GAAgB,SAAAD,GAAY,MAAI,MAChCG,GAAiB,SAAAD,GAAa,MAAI,OAGlCU,OAAOC,QAAQ,iCARnB,aAkBK,MAILa,EAAY,SAAC,GAAD,IAAGX,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAiBhB,EAA7B,EAA6BA,aAAcC,EAA3C,EAA2CA,gBAAiBC,EAA5D,EAA4DA,cAAeC,EAA3E,EAA2EA,iBAA3E,OAChB,kBAAC,IAAD,KACE,uBAAGN,QAAS,WACkD,GAA3DG,EAAahB,SAAS+B,EAAQY,IAAM,IAAMZ,EAAQnB,OAEnDK,GAAgB,SAAA2B,GAAS,4BAAQA,GAAR,CAAmBb,EAAQY,IAAM,IAAMZ,EAAQnB,UACxEO,GAAiB,SAAAyB,GAAS,4BAAQA,GAAR,CAAmBb,QAEvCzC,EAAU0B,EAAcE,GAAe,GAAG5B,EAAU0B,EAAcE,GAAe,GAAGjB,QAAQ8B,EAAQY,IAAM,IAAMZ,EAAQnB,OAASmB,EAAQG,WAC/IjB,GAAgB,SAAA2B,GAAS,4BAAQA,GAAR,CAAmBb,EAAQY,IAAM,IAAMZ,EAAQnB,UACxEO,GAAiB,SAAAyB,GAAS,4BAAQA,GAAR,CAAmBb,UAI/C,kBAAC,IAAKc,MAAN,KACI,kBAAC,IAAMC,UAAP,CAAiBlC,KAAK,QAC5B,yBAAKmC,IAAQf,MAGTD,EAAQD,MAAO,6BAjBjB,IAiB4BC,EAAQiB,MACpC,gCAKEC,EAAa,SAAC,GAAkF,IAAhFC,EAA+E,EAA/EA,SAAUlC,EAAqE,EAArEA,aAAcC,EAAuD,EAAvDA,gBAAiBC,EAAsC,EAAtCA,cAAeC,EAAuB,EAAvBA,iBAAuB,EAC3EgC,IAAMC,SAAS,KAD4D,mBAC5FxC,EAD4F,KACtFE,EADsF,KAE7FuC,EAAeH,EAASxB,QAAO,SAAAK,GAAO,OAAInB,IAASmB,EAAQnB,QAE/D,OACI,kBAAC,IAAMU,SAAP,KAEF,kBAAC,EAAD,CAAclB,MAAQ,CAAEQ,OAAME,aAEvB,kBAAC,IAAOwC,MAAR,KAELD,EAAa7C,KAAI,SAAAuB,GAChB,GAAGA,EAAQG,SAAW,EACrB,OAAO,kBAAC,EAAD,CAAWxB,IAAKqB,EAAQY,IAAKZ,QAAUA,EAC5CC,gBAAmB,iBAAmBD,EAAQY,IAAM,SACpD3B,aAAcA,EACdC,gBAAiBA,EACjBC,cAAeA,EACfC,iBAAkBA,UAWxBoC,EAAkB,SAAC,GAAD,IAAGxB,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAiBE,EAA7B,EAA6BA,SAAUlB,EAAvC,EAAuCA,aAAcC,EAArD,EAAqDA,gBAAiBC,EAAtE,EAAsEA,cAAeC,EAArF,EAAqFA,iBAArF,OACtB,kBAAC,IAAD,KACE,kBAAC,IAAK0B,MAAN,KACI,kBAAC,IAAMC,UAAP,CAAiBlC,KAAK,QAC5B,yBAAKmC,IAAQf,MAGVD,EAAQD,MACT,6BACCC,EAAQyB,MACT,6BATF,QAUQzB,EAAQnB,KACd,6BAXF,IAYImB,EAAQiB,MACV,6BAbF,aAcad,EACV,IACD,kBAAC,IAAD,CAAQuB,QAAU,OAAO7C,KAAO,QAAQ8C,MAAQ,OAAO7C,QAAS,WAC5D,IAAIsB,EAASjB,EAAcjB,QAAQ8B,GAEnCf,EAAaoB,OAAOD,EAAQ,GAC5BjB,EAAckB,OAAOD,EAAQ,GAE7BlB,GAAgB,SAAAD,GAAY,mBAAQA,MACpCG,GAAiB,SAAAD,GAAa,mBAAQA,QAP1C,KAYC,IACD,kBAAC,IAAD,CAAQuC,QAAU,OAAO7C,KAAO,QAAQ8C,MAAQ,SAAS7C,QAAS,WAC9DI,GAAgB,SAAAD,GAAY,OAAIA,EAAaU,QAAO,SAAAC,GAAQ,OAAIA,IAAcI,EAAQY,IAAM,IAAMZ,EAAQnB,WAC1GO,GAAiB,SAAAD,GAAa,OAAIA,EAAcQ,QAAO,SAAAC,GAAQ,OAAIA,IAAaI,UAFpF,OAUEM,EAAY,SAAC,GAAD,IAAEnB,EAAF,EAAEA,cAAF,OAChBsB,KAAKmB,MAAiF,IAA3EzC,EAAc0C,QAAO,SAACC,EAAYtC,GAAb,OAAuBsC,EAAatC,EAAMyB,QAAO,IAAU,KAGvFc,EAAS,kBACb,kBAAC,IAAD,CACEjF,SAAUA,EACVkF,aAAc9F,IAASe,UAIrBgF,EAAsB,SAAC,GAA4D,IAA3DhD,EAA0D,EAA1DA,aAAcE,EAA4C,EAA5CA,cAAeE,EAA6B,EAA7BA,KAAM6C,EAAuB,EAAvBA,kBAC/D,GAAY,MAAR7C,GAAqC,GAArB6C,EAA2B,CAC7C,IACIC,EADcjG,IAASe,OAAOmF,YACTC,IACzBC,QAAQC,IAAI,uBAAwBJ,GACxB7E,EAAeV,WAAWC,IAAI6C,OAAOyC,IAC3CK,KAAK,SAASC,MAAK,SAASC,GACgB,GAA1CA,EAASC,SAAS,sBAA2E,GAA3CD,EAASC,SAAS,uBACrEL,QAAQC,IAAI,6CACfjF,EAAeV,WAAWC,IAAI6C,OAAOyC,GAAU,sBAAsB3B,aACpE,SAAAoC,GAAiB,OAAI3D,KAEtB3B,EAAeV,WAAWC,IAAI6C,OAAOyC,GAAU,uBAAuB3B,aACrE,SAAAqC,GAAkB,OAAI1D,OAIrBmD,QAAQC,IAAI,yDACZjF,EAAeV,WAAWC,IAAI6C,OAAOyC,GAAU,KAAKW,IAAI,CAEpDF,kBAAmB3D,EACnB4D,mBAAoB1D,QAMhC,OAAO,MAGH4D,EAAU,SAAC,GAAD,IAAG1D,EAAH,EAAGA,KAAH,EAASH,gBAAT,EAA0BE,iBAA1B,EAA4C4D,qBAA5C,OACd,kBAAC,IAAD,CAASrB,MAAM,QACb,kBAAC,IAAQsB,OAAT,iBACY5D,EAAK6D,YACf,kBAAC,IAAD,CAAQC,SAAO,EAACrE,QAAS,WACvB5C,IAASe,OAAOmG,YADlB,cAWAC,EAAS,SAAC,GAAD,IAAGhE,EAAH,EAAGA,KAAMJ,EAAT,EAASA,aAAcC,EAAvB,EAAuBA,gBAAiBC,EAAxC,EAAwCA,cAAeC,EAAvD,EAAuDA,iBAAkB4D,EAAzE,EAAyEA,qBAAsBd,EAA/F,EAA+FA,kBAA/F,OACX7C,EAAO,kBAAC,IAAME,SAAP,KACR,kBAAC,EAAD,CAAsBN,aAAgBA,EAAcE,cAAiBA,EAAeE,KAAQA,EAAM6C,kBAAqBA,IACvH,kBAAC,EAAD,CAAS7C,KAAOA,EAAOH,gBAAmBA,EAAiBE,iBAAoBA,EAAkB4D,qBAAwBA,KAErH,kBAAC,EAAD,OAaDM,EAAmB,SAAC,GAAwF,IAAvFjE,EAAsF,EAAtFA,KAAMH,EAAgF,EAAhFA,gBAAiBE,EAA+D,EAA/DA,iBAAkB8C,EAA6C,EAA7CA,kBAAmBc,EAA0B,EAA1BA,qBAGnF,GAFFV,QAAQC,IAAI,oBAAqBlD,GACjCiD,QAAQC,IAAI,yCAA0CL,GACxC,MAAR7C,GAAqC,GAArB6C,EAA4B,CAC9C,IACIC,EADcjG,IAASe,OAAOmF,YACTC,IACzBC,QAAQC,IAAI,2BAA4BJ,GAG9B7E,EAAeV,WAAWC,IAAI6C,OAAOyC,IAC3CK,KAAK,SAASC,MAAK,SAASC,GACgB,GAA1CA,EAASC,SAAS,sBAA2E,GAA3CD,EAASC,SAAS,wBAEpEL,QAAQC,IAAIG,EAASa,MAAMX,mBAC3B1D,GAAgB,SAAA2B,GAAS,4BAAQA,GAAR,YAAsB6B,EAASa,MAAMX,uBAC9DN,QAAQC,IAAIG,EAASa,MAAMV,oBAC3BzD,GAAiB,SAAAyB,GAAS,4BAAQA,GAAR,YAAsB6B,EAASa,MAAMV,4BAoCrEG,GAAqB,QAMP,MAAR3D,GAAqC,GAArB6C,IACtBhD,GAAgB,SAAA2B,GAAS,MAAQ,GAAR,YACzBzB,GAAiB,SAAAyB,GAAS,MAAQ,GAAR,YAC1BmC,GAAqB,IAEvB,OAAO,MA2IIQ,EAtIH,WAAO,IAAD,EACQnC,mBAAS,IADjB,mBACToC,EADS,KACHC,EADG,OAESrC,oBAAS,GAFlB,mBAETsC,EAFS,KAEFC,EAFE,OAGSvC,oBAAS,GAHlB,mBAGTwC,EAHS,KAGFC,EAHE,KAIV3C,EAAW5C,OAAOC,OAAOiF,GAJf,EAMuBpC,mBAAS,IANhC,mBAMVpC,EANU,KAMIC,EANJ,OAOyBmC,mBAAS,IAPlC,mBAOVlC,EAPU,KAOKC,EAPL,OASOiC,mBAAS,MAThB,mBASVhC,EATU,KASJ0E,EATI,OAUiC1C,oBAAS,GAV1C,mBAUVa,EAVU,KAUSc,EAVT,KAiEhB,OAZAgB,qBAAU,WACR,IAAMC,EAAa,SAAAC,GACbA,EAAKX,OAAOG,EAAQQ,EAAKX,QAG/B,OADA5G,EAAGwH,GAAG,QAASF,GAAY,SAAAG,GAAK,OAAIC,MAAMD,MACnC,WAAQzH,EAAG2H,IAAI,QAASL,MAC9B,IAEHD,qBAAU,WACR9H,IAASe,OAAOsH,mBAAmBR,KAClC,IAGD,kBAAC,IAAMxE,SAAP,KACC,kBAAC,EAAD,CACAF,KAAQA,EACRH,gBAAmBA,EACnBE,iBAAoBA,EACpB8C,kBAAqBA,EACrBc,qBAAwBA,IAExB,kBAAC,IAAD,CAAQwB,MAAM,OACX,kBAAC,IAAOC,QAAR,CAAgBC,MAAM,OACtB,kBAAC,EAAD,CACArF,KAAOA,EACPJ,aAAiBA,EACjBC,gBAAoBA,EACpBC,cAAkBA,EAClBC,iBAAqBA,EACrB4D,qBAAwBA,EACxBd,kBAAqBA,IAEvB,kBAAC,IAAOyC,KAAR,CAAa7F,QAAS,WAEnBgF,EADW,GAATD,KAQH,yBAEA7C,IAAM,2GACN4D,IAAI,qBACJC,KAAK,eACLC,MAAM,KACNC,OAAO,UAMf,kBAAC,IAAD,CACQC,QACE,kBAAC,EAAD,CACE/F,aAAgBA,EAChBC,gBAAmBA,EACnBC,cAAiBA,EACjBC,iBAAoBA,EACpBC,KAAQA,IAGZ4F,KAAQtB,EACRuB,OAAUrB,EACVsB,WAAa,EACbC,UAAaxB,EACbyB,OAAQ,CAAEL,QAAS,CAAEM,SAAU,QAASC,WAAY,YAGxD,kBAAC,IAAD,KACE,kBAAC,EAAD,CAAYpE,SAAYA,EACxBlC,aAAgBA,EAChBC,gBAAmBA,EACnBC,cAAiBA,EACjBC,iBAAmBA,OChgBLoG,QACW,cAA7B3F,OAAO4F,SAASC,UAEe,UAA7B7F,OAAO4F,SAASC,UAEhB7F,OAAO4F,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMzD,MAAK,SAAA0D,GACjCA,EAAaC,kB","file":"static/js/main.79daafcc.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport 'rbx/index.css';\nimport { Button, Container, Title, Card, Column, Level, Image, Message, Navbar } from 'rbx';\nimport Sidebar from \"react-sidebar\";\nimport { render } from 'react-dom'\nimport { transitions, positions, Provider as AlertProvider } from 'react-alert'\nimport { useAlert } from 'react-alert'\nimport AlertTemplate from 'react-alert-template-basic'\nimport firebase from 'firebase/app';\nimport 'firebase/database';\nimport 'firebase/auth';\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\nimport * as firebaseui from \"firebaseui\";\n\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyA3jGXaGPBvzgiTynqez7KwIkhlXhynukE\",\n  authDomain: \"nu-cs397-learn-react-tutorial.firebaseapp.com\",\n  databaseURL: \"https://nu-cs397-learn-react-tutorial.firebaseio.com\",\n  projectId: \"nu-cs397-learn-react-tutorial\",\n  storageBucket: \"nu-cs397-learn-react-tutorial.appspot.com\",\n  messagingSenderId: \"991910079553\",\n  appId: \"1:991910079553:web:6700a5475d022d9e75eac0\"\n};\n\nfirebase.initializeApp(firebaseConfig);\nconst db = firebase.database().ref();\n\nconst uiConfig = {\n  signInFlow: 'popup',\n  signInOptions: [\n    firebase.auth.GoogleAuthProvider.PROVIDER_ID],\n  //credentialHelper: firebaseui.auth.CredentialHelper.ACCOUNT_CHOOSER_COM,\n  callbacks: {\n    signInSuccessWithAuthResult: () => false\n  }\n};\n\nconst secondaryAppConfig = {\n  apiKey: \"AIzaSyDuJiDx3nyQ_i1dCh0CUsGoFhuf_iD24Ns\",\n  authDomain: \"nu-cs397-learn-react-userdb.firebaseapp.com\",\n  databaseURL: \"https://nu-cs397-learn-react-userdb.firebaseio.com\",\n  projectId: \"nu-cs397-learn-react-userdb\",\n  storageBucket: \"nu-cs397-learn-react-userdb.appspot.com\",\n  messagingSenderId: \"1041177555949\",\n  appId: \"1:1041177555949:web:dd896888f0a972a7adede4\"\n};\nvar secondDatabase = firebase.initializeApp(secondaryAppConfig, \"secondary\");\nconst second_db = secondDatabase.database().ref();\n\nfunction cart_sort(arr, arr2){\n    var a = [];\n    var b = [];\n    var c = [];\n    var _products = [];\n    var prev;\n    \n    for (var i = 0; i < arr.length; i++ ) {\n    \tif(i == 0) {\n        \ta.push(arr[i]);\n            b.push(1);\n            c.push((arr[i])[arr[i].length -1]);\n            _products.push(arr2[i]);\n        }\n        else if ( i > 0 ) {\n        \tif(a.includes(arr[i]) === false ){\n           \t \ta.push(arr[i]);\n            \tb.push(1);\n              c.push((arr[i])[arr[i].length -1]);\n              _products.push(arr2[i]);\n            }\n            else {\n           \t \tb[a.indexOf(arr[i])]++;\n        \t}\n        } \n\n        prev = arr[i];\n    }\n    return [a, b, c, _products];\n    //returns array of arrays. first subarray is SKU + size identifier string, second subarray is quantity of each unique product (different sizes count as different product), third subarray is size of product, fourth array is actual product JSON object\n}\n\n\nconst buttonState = selected => (\n  selected ? `button is-success is-selected` : 'button'\n);\n\nconst sizes = ['XS', 'S', 'M', 'L', 'XL'];\n\nconst SizeSelector = ({ state }) => (\n  <div className=\"field has-addons\">\n  { Object.values(sizes)\n      .map(value => \n        <button key={value}\n          className={ buttonState(value === state.size) }\n          onClick={ () => state.setSize(value) }>\n          { value }\n        </button>\n      )\n  }\n  </div>\n);\n\nconst RenderShoppingCart = ({ ShoppingCart, setShoppingCart, ShoppingCart2, setShoppingCart2, user}) => {\n  const filteredShoppingCart = cart_sort(ShoppingCart, ShoppingCart2);\n  if (ShoppingCart.length <= 0 && ShoppingCart2.length <= 0) {\n    return <p> \n      Total: $0.00\n    </p>\n  } \n  else if (ShoppingCart.length == ShoppingCart2.length) {\n    return (<React.Fragment> \n    {filteredShoppingCart[0].map((key, index) => {\n        if(db.child(String(filteredShoppingCart[0][index]) + \"/quantity/\") == 0){\n          setShoppingCart(ShoppingCart => ShoppingCart.filter(_product => _product !== filteredShoppingCart[0][index] ));\n          setShoppingCart2(ShoppingCart2 => ShoppingCart2.filter(_product => _product !== filteredShoppingCart[3][index]));\n          window.confirm(String(filteredShoppingCart[3][index].title) + \" in size:\" + String(filteredShoppingCart[3][index].size) + \"is now out of stock and has been removed from your cart.\");\n        }\n        else if(filteredShoppingCart[1][index] > db.child(String(filteredShoppingCart[0][index]) + \"/quantity/\")){\n          while(filteredShoppingCart[1][index] > db.child(String(filteredShoppingCart[0][index]) + \"/quantity/\")){\n            var _index = ShoppingCart2.indexOf(filteredShoppingCart[3][index]);\n        \n            ShoppingCart.splice(_index, 1);\n            ShoppingCart2.splice(_index, 1);\n        \n            setShoppingCart(ShoppingCart => [...ShoppingCart]);\n            setShoppingCart2(ShoppingCart2 => [...ShoppingCart2]);\n          }\n          window.confirm(\"The quantity you selected for \" + String(filteredShoppingCart[3][index].title) + \" in size:\" + String(filteredShoppingCart[3][index].size) + \"is no longer available and your cart has been updated with the remaining stock available.\");\n        }\n        else{\n          return <CartProductTest key= {key} product={filteredShoppingCart[3][index]} product_img_src = {\"data/products/\" + filteredShoppingCart[0][index].slice(0, -2) + \"_2.jpg\"} quantity = {filteredShoppingCart[1][index]} ShoppingCart = {ShoppingCart} setShoppingCart = {setShoppingCart} ShoppingCart2 = {ShoppingCart2} setShoppingCart2 = {setShoppingCart2} />\n        }\n      })\n    }\n      <p> \n      Total: $ <TotalCost ShoppingCart2 = {ShoppingCart2}/>\n    </p> \n      <Button variant=\"primary\" onClick={() => {\n        if(user != null){\n          filteredShoppingCart[0].map((key, index) => db.child(String(filteredShoppingCart[0][index]) + \"/quantity/\").transaction(quantity => Math.max( (quantity - filteredShoppingCart[1][index]) || 0) )\n          );\n          setShoppingCart(ShoppingCart => []); \n          setShoppingCart2(ShoppingCart2 => []); \n        }\n        else{\n          window.confirm(\"Please sign in to checkout.\");\n        }\n      }\n    }>\n          Checkout \n        </Button>\n    </React.Fragment>\n    );\n  }\n  else{\n    return null;\n  }\n}; \n\nconst O_Product = ({ product, product_img_src, ShoppingCart, setShoppingCart, ShoppingCart2, setShoppingCart2 }) => (\n  <Card>\n    <a onClick={() => { \n    if(ShoppingCart.includes(product.sku + '_' + product.size) == false)\n    {\n      setShoppingCart(prevArray => [...prevArray, product.sku + '_' + product.size])\n      setShoppingCart2(prevArray => [...prevArray, product])\n    }\n    else if(cart_sort(ShoppingCart, ShoppingCart2)[1][cart_sort(ShoppingCart, ShoppingCart2)[0].indexOf(product.sku + '_' + product.size)] < product.quantity){\n      setShoppingCart(prevArray => [...prevArray, product.sku + '_' + product.size])\n      setShoppingCart2(prevArray => [...prevArray, product])\n        }\n     }\n    }>\n    <Card.Image>\n        <Image.Container size=\"6by3\">\n  <img src = { product_img_src } />\n      </Image.Container>\n    </Card.Image>\n    { product.title }<br></br>${product.price}\n    <br></br>\n        </a>\n  </Card>\n);\n\nconst O_Products = ({ products, ShoppingCart, setShoppingCart, ShoppingCart2, setShoppingCart2 }) => {\n  const [size, setSize] = React.useState('S');\n  const sizeProducts = products.filter(product => size === product.size);\n\n    return(\n        <React.Fragment>\n\n      <SizeSelector state={ { size, setSize } } />\n      \n             <Button.Group>\n\n       {sizeProducts.map(product => {\n         if(product.quantity > 0){\n          return <O_Product key={product.sku} product={ product } \n            product_img_src = {\"data/products/\" + product.sku + \"_1.jpg\"}\n            ShoppingCart={ShoppingCart}\n            setShoppingCart={setShoppingCart}\n            ShoppingCart2={ShoppingCart2}\n            setShoppingCart2={setShoppingCart2}\n            />\n          }\n        }\n      )\n    }\n        </Button.Group>\n          </React.Fragment>\n  );\n};\n\nconst CartProductTest = ({ product, product_img_src, quantity, ShoppingCart, setShoppingCart, ShoppingCart2, setShoppingCart2 }) => (\n  <Card>\n    <Card.Image>\n        <Image.Container size=\"2by2\">\n  <img src = { product_img_src } />\n      </Image.Container>\n    </Card.Image>\n    {product.title}\n    <br></br> \n    {product.style} \n    <br></br>\n    Size:{product.size}\n    <br></br>\n    ${product.price}\n    <br></br>\n    Quantity: {quantity}\n    {\" \"} \n    <Button rounded = \"true\" size = \"small\" color = \"info\" onClick={() => {\n        var _index = ShoppingCart2.indexOf(product);\n        \n        ShoppingCart.splice(_index, 1);\n        ShoppingCart2.splice(_index, 1);\n        \n        setShoppingCart(ShoppingCart => [...ShoppingCart]);\n        setShoppingCart2(ShoppingCart2 => [...ShoppingCart2]);\n      }\n    }>\n          - \n        </Button>\n    {\" \"} \n    <Button rounded = \"true\" size = \"small\" color = \"danger\" onClick={() => {\n        setShoppingCart(ShoppingCart => ShoppingCart.filter(_product => _product !== (product.sku + \"_\" + product.size) ));\n        setShoppingCart2(ShoppingCart2 => ShoppingCart2.filter(_product => _product !== product));\n      }\n    }>\n          x\n        </Button>\n  </Card>\n);\n\nconst TotalCost = ({ShoppingCart2}) => (\n  Math.floor(ShoppingCart2.reduce((total_cost, index) => total_cost + index.price, 0) * 100)/100\n);\n\nconst SignIn = () => (\n  <StyledFirebaseAuth\n    uiConfig={uiConfig}\n    firebaseAuth={firebase.auth()}\n  />\n);\n\nconst UpdateUserSavedCart = ({ShoppingCart, ShoppingCart2, user, PreviousRetrieved}) => {\n  if (user != null && PreviousRetrieved != false){\n    var CurrentUser = firebase.auth().currentUser;\n    var userId = CurrentUser.uid; \n    console.log(\"UpdateUserSavedCart:\", userId);\n      var ref = secondDatabase.database().ref(String(userId));\n      ref.once(\"value\").then(function(snapshot) {\n        if (snapshot.hasChild(\"SavedShoppingCart\") == true && snapshot.hasChild(\"SavedShoppingCart2\") == true){\n           console.log(\"UpdateUserSavedCart Firebase entry exists\");\n        secondDatabase.database().ref(String(userId) + \"/SavedShoppingCart\").transaction(\n         SavedShoppingCart => ShoppingCart\n          );\n        secondDatabase.database().ref(String(userId) + \"/SavedShoppingCart2\").transaction(\n         SavedShoppingCart2 => ShoppingCart2\n          );\n        }\n        else { \n          console.log(\"UpdateUserSavedCart Firebase entry does not exist yet\");\n          secondDatabase.database().ref(String(userId) + \"/\").set({\n            \n              SavedShoppingCart: ShoppingCart,\n              SavedShoppingCart2: ShoppingCart2\n            \n          })\n        }\n      }\n    )}\n  return null;\n}\n\nconst Welcome = ({ user, setShoppingCart, setShoppingCart2, setPreviousRetrieved }) => (\n  <Message color=\"info\">\n    <Message.Header>\n      Welcome, {user.displayName} \n      <Button primary onClick={() => {\n        firebase.auth().signOut();\n        }\n      }>\n        Log out\n      </Button>\n    </Message.Header>\n  </Message>\n);\n\n\nconst Banner = ({ user, ShoppingCart, setShoppingCart, ShoppingCart2, setShoppingCart2, setPreviousRetrieved, PreviousRetrieved}) => (\n    user ? <React.Fragment> \n   <UpdateUserSavedCart  ShoppingCart = {ShoppingCart} ShoppingCart2 = {ShoppingCart2} user = {user} PreviousRetrieved = {PreviousRetrieved} />\n   <Welcome user={ user } setShoppingCart = {setShoppingCart} setShoppingCart2 = {setShoppingCart2} setPreviousRetrieved = {setPreviousRetrieved} />\n   </React.Fragment> \n     : <SignIn/>     \n);\n//, <UpdateUserSavedCart  ShoppingCart = {ShoppingCart} ShoppingCart2 = {ShoppingCart2} user = {user} />\n\n/*\n\n <Button primary onClick={() => {console.log(\"Current user:\", user);}}> Check current user </Button>\n   <Button primary onClick={() => {console.log(\"Current user ID:\", firebase.auth().currentUser.uid);}}> Check current user ID </Button>\n   <Button primary onClick={() => {console.log(\"PreviousRetrieved button:\", PreviousRetrieved);}}> Check PreviousRetrieved </Button>\n{ user ? (<UpdateUserSavedCart  ShoppingCart = {ShoppingCart} ShoppingCart2 = {ShoppingCart2} user = {user} />, <Welcome user={ user } setShoppingCart = {setShoppingCart} setShoppingCart2 = {setShoppingCart2} setPreviousRetrieved = {setPreviousRetrieved} />)\n     : (<SignIn/>) }\n*/\n\nconst RetrieveUserCart = ({user, setShoppingCart, setShoppingCart2, PreviousRetrieved, setPreviousRetrieved}) => {\n  console.log(\"RetrieveUserCart:\", user);\n  console.log(\"RetrieveUserCart's PreviousRetrieved1:\", PreviousRetrieved);\n    if (user != null && PreviousRetrieved == false) {\n      var CurrentUser = firebase.auth().currentUser;\n      var userId = CurrentUser.uid; \n      console.log(\"RetrieveUserCart UserID:\", userId);\n      \n      \n      var ref = secondDatabase.database().ref(String(userId));\n      ref.once(\"value\").then(function(snapshot) {\n        if (snapshot.hasChild(\"SavedShoppingCart\") == true && snapshot.hasChild(\"SavedShoppingCart2\") == true){\n            //console.log(snapshot.val());\n            console.log(snapshot.val().SavedShoppingCart);\n            setShoppingCart(prevArray => [...prevArray, ...snapshot.val().SavedShoppingCart]);\n            console.log(snapshot.val().SavedShoppingCart2);\n            setShoppingCart2(prevArray => [...prevArray, ...snapshot.val().SavedShoppingCart2]);\n          //console.log(  Object.values(secondDatabase.database().ref(String(userId) + \"/SavedShoppingCart\")) );\n          //console.log(  Object.values(secondDatabase.database().ref(String(userId) + \"/SavedShoppingCart2\")) );\n        }\n      });\n      \n      /*\n      var ref = secondDatabase.database().ref(String(userId) + \"/SavedShoppingCart\");\n      var ref2 = secondDatabase.database().ref(String(userId) + \"/SavedShoppingCart2\");\n      ref.on('value', function(snapshot) {\n   console.log(\"userSavedCart:\", snapshot.val() );\n   //setShoppingCart(prevArray => [...prevArray, ...snapshot.val()]);\n   if(snapshot.val() != null){\n      setShoppingCart(prevArray => [...prevArray, ...snapshot.val()]);\n   }\n});\n ref2.on('value', function(snapshot) {\n   console.log(\"userSavedCart2:\", snapshot.val() );\n   //setShoppingCart2(prevArray => [...prevArray, ...snapshot.val()]);\n   if(snapshot.val() != null){\n      setShoppingCart2(prevArray => [...prevArray, ...snapshot.val()]);\n   }\n});\n*/\n      /*\n      ref.once(\"value\").then(function(snapshot) {\n        if (snapshot.hasChild(\"SavedShoppingCart\") == true && snapshot.hasChild(\"SavedShoppingCart2\") == true){\n        var userSavedCart = Object.values(second_db.child(String(userId) + \"/SavedShoppingCart/\"));\n        console.log(\"userSavedCart:\", userSavedCart);\n        var userSavedCart2 = Object.values(second_db.child(String(userId) + \"/SavedShoppingCart2/\"));\n        console.log(\"userSavedCart2:\", userSavedCart2);\n        //setShoppingCart(prevArray => [...prevArray, userSavedCart]);\n        //setShoppingCart2(prevArray => [...prevArray, userSavedCart2]);\n        }\n      });\n      */\n      setPreviousRetrieved(true); \n    }\n    /*else if(user != null && PreviousRetrieved == true){\n      \n    }*/\n    \n    else if(user == null && PreviousRetrieved == true){\n      setShoppingCart(prevArray => [...[]]); // or setShoppingCart(prevArray => [])\n      setShoppingCart2(prevArray => [...[]]);\n      setPreviousRetrieved(false);\n    }\n    return null;\n}\n\n\n\nconst App = () => {\n  const [data, setData] = useState({});\n  const [_open, setOpen] = useState(false);\n  const [_dock, setDock] = useState(false);\n  const products = Object.values(data);\n  \n  const[ShoppingCart, setShoppingCart] = useState([]); \n  const[ShoppingCart2, setShoppingCart2] = useState([]); \n  \n  const[user, setUser] = useState(null);\n  const[PreviousRetrieved, setPreviousRetrieved] = useState(false);\n  \n  //const alert = useAlert();\n  //const[LoggedIn?, setLoggedIn?] = useState(false);\n  \n  /*\n  if(LoggedIn? == true){\n  //better to do this when user signs in \n      setShoppingCart(prevArray => [...prevArray, userShoppingCart])\n      setShoppingCart2(prevArray => [...prevArray, userShoppingCart2])\n      \n      \n      \n  }\n  \n  if(LoggedIn? == false){\n    setShoppingCart(ShoppingCart => []); \n    setShoppingCart2(ShoppingCart2 => []); \n  }\n  const userCart = Object.values(User);\n  \n  */\n  \n  /*\n  useEffect(() => {\n    const fetchProducts = async () => {\n      const response = await fetch('./data/inventory.json');\n      const json = await response.json();\n      setData(json);\n    };\n    fetchProducts();\n  }, []);\n  \n  useEffect(() => {\n    const fetchUser = async () => {\n      const response = await fetch('./data/inventory.json');\n      const json = await response.json();\n      setUser(json);\n    };\n    fetchUser();\n  }, []);\n  */\n  \n  useEffect(() => {\n    const handleData = snap => {\n      if (snap.val()) setData(snap.val());\n    };\n    db.on('value', handleData, error => alert(error));\n    return () => { db.off('value', handleData); };\n  }, []);\n  \n  useEffect(() => {\n    firebase.auth().onAuthStateChanged(setUser);\n  }, []);\n\n  return (\n    <React.Fragment>\n     <RetrieveUserCart \n     user = {user}\n     setShoppingCart = {setShoppingCart}\n     setShoppingCart2 = {setShoppingCart2}\n     PreviousRetrieved = {PreviousRetrieved} \n     setPreviousRetrieved = {setPreviousRetrieved}\n     />\n     <Navbar fixed=\"top\">\n        <Navbar.Segment align=\"end\">\n        <Banner \n        user={ user }\n        ShoppingCart = { ShoppingCart }\n        setShoppingCart = { setShoppingCart }\n        ShoppingCart2 = { ShoppingCart2 }\n        setShoppingCart2 = { setShoppingCart2 } \n        setPreviousRetrieved = {setPreviousRetrieved}\n        PreviousRetrieved = {PreviousRetrieved}\n        />\n      <Navbar.Item onClick={() => {\n        if(_dock == false){\n         setDock(true);\n        }\n        else{\n          setDock(false)\n        }\n       }\n      }>\n        <img\n        //src=\"bag-icon.png\"\n        src = \"https://imageog.flaticon.com/icons/png/512/2/2772.png?size=1200x630f&pad=10,10,10,10&ext=png&bg=FFFFFFFF\"\n        alt=\"Shopping Cart Icon\"\n        role=\"presentation\"\n        width=\"25\"\n        height=\"25\"\n      />\n      </Navbar.Item>\n    </Navbar.Segment>\n</Navbar>\n\n<Sidebar\n        sidebar={\n          <RenderShoppingCart  \n            ShoppingCart = {ShoppingCart} \n            setShoppingCart = {setShoppingCart} \n            ShoppingCart2 = {ShoppingCart2} \n            setShoppingCart2 = {setShoppingCart2} \n            user = {user}\n          /> \n        }\n        open = {_open}\n        docked = {_dock}\n        pullRight\t= {true}\n        onSetOpen = {setOpen}\n        styles={{ sidebar: { position: \"fixed\", background: \"white\" } }}>\n      </Sidebar>\n\n    <Level>\n      <O_Products products = {products} \n      ShoppingCart = {ShoppingCart}\n      setShoppingCart = {setShoppingCart}\n      ShoppingCart2 = {ShoppingCart2}\n      setShoppingCart2 ={setShoppingCart2} />\n      </Level>\n      </React.Fragment>\n  );\n}; \n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}